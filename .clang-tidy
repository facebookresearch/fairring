---
InheritParentConfig: true
Checks: '
readability-identifier-naming,
readability-inconsistent-declaration-parameter-name,
readability-named-parameter,
'
FormatStyle: file
CheckOptions:
# Names of classes (and structs?)
- { key: readability-identifier-naming.ClassCase, value: CamelCase }
# Names of enums and enum classes
- { key: readability-identifier-naming.EnumCase, value: CamelCase }
# Names of members and methods of classes (and structs?)
- { key: readability-identifier-naming.MemberCase, value: camelBack }
- { key: readability-identifier-naming.PrivateMemberCase, value: camelBack }
- { key: readability-identifier-naming.PrivateMemberSuffix, value: '_' }
- { key: readability-identifier-naming.ProtectedMemberCase, value: camelBack }
- { key: readability-identifier-naming.ProtectedMemberSuffix, value: '_' }
- { key: readability-identifier-naming.MethodCase, value: camelBack }
# Names of parameters and local variables
- { key: readability-identifier-naming.LocalVariableCase, value: camelBack }
- { key: readability-identifier-naming.ParameterCase, value: camelBack }
# Names of constants
- { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
- { key: readability-identifier-naming.GlobalConstantPrefix, value: 'k' }
# FIXME scoped enums are only supported in clang-tidy 12.
# Names of (non-class) enum members
# - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
# Names of enum class members
# - { key: readability-identifier-naming.ScopedEnumConstantCase, value: CamelCase }
# - { key: readability-identifier-naming.ScopedEnumConstantPrefix, value: 'k' }
# Names of template parameters
- { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase }
# Names of global functions
- { key: readability-identifier-naming.FunctionCase, value: camelBack }
# Names of namespaces
- { key: readability-identifier-naming.NamespaceCase, value: lower_case }
...
